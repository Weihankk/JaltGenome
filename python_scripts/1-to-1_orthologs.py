#!/usr/bin/env python
"""This script is to pull out 1-to-1 orthologous sequences from orthoMCL output and
save the orthologous sequences into a output directory"""

import argparse
from Bio import SeqIO


def one2one_ortholog(infile, outDIR, seqfile, num):
	""" identify 1-to-1 orthologs by parsing the output from orthomcl program."""
	count = 1
	for line in infile:
		s = line.rstrip()
		orths = list(s.split('\t'))
		#print orths
		speciesids, seqids = [], []
		for x in xrange(len(orths)):
			species = orths[x].split('|')[0]
			seq = orths[x].split('|')[1]
			speciesids.append(species)
			seqids.append(seq)
			
		if len(set(speciesids)) == num and len(speciesids) == num:
			outfile = open(outDIR+'/gene_ortho_'+str(count), "w")
			print seqids
			with open(seqfile, "rU") as handle:
				for record in SeqIO.parse(handle, "fasta"):
					for x in xrange(len(seqids)):
						if seqids[x] in record.id:
							outfile.write('>'+record.id+'\n')
							outfile.write(str(record.seq)+'\n')
			count += 1
			outfile.close()
	
	
	
def main():
	parser = argparse.ArgumentParser(prog="1-to-1_orthlogs.py", description=__doc__,
	formatter_class=argparse.ArgumentDefaultsHelpFormatter)
	parser.add_argument('-i', '--infile', \
	help=("the output generated by orthoMCL"), required=True)
	parser.add_argument('-s', '--seqfile', \
	help=("the fasta file containing all sequences from investigated lineages"), required=True)
	parser.add_argument('-n', '--species_num', \
	help=("total number of species for 1-to-1 orthologs identification"), required=True)
	parser.add_argument('-o', '--outDIR', help=("the output directory"), required=True)
	args = parser.parse_args()
	
	infile = open(args.infile, "r")
	outdir = args.outDIR
	seqfile = args.seqfile
	num = int(args.species_num)
	
	one2one_ortholog(infile, outdir, seqfile, num)
		
	infile.close()



if __name__ == "__main__":
	main()
	
	
	